[{"/Users/thebiltheory/TheBilTheory/interview-tests/cycle/src/App.test.tsx":"1","/Users/thebiltheory/TheBilTheory/interview-tests/cycle/src/App.tsx":"2","/Users/thebiltheory/TheBilTheory/interview-tests/cycle/src/index.tsx":"3","/Users/thebiltheory/TheBilTheory/interview-tests/cycle/src/reportWebVitals.ts":"4"},{"size":279,"mtime":1645727109307},{"size":668,"mtime":1645727109307},{"size":511,"mtime":1645727109307},{"size":486,"mtime":1645727386988,"results":"5","hashOfConfig":"6"},{"filePath":"7","messages":"8","suppressedMessages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w28cch","/Users/thebiltheory/TheBilTheory/interview-tests/cycle/src/reportWebVitals.ts",[],["10"],{"ruleId":"11","severity":2,"message":"12","line":6,"column":5,"nodeType":"13","messageId":"14","endLine":12,"endColumn":8,"suggestions":"15","suppressions":"16"},"@typescript-eslint/no-floating-promises","Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","ExpressionStatement","floatingVoid",["17"],["18"],{"messageId":"19","fix":"20","desc":"21"},{"kind":"22","justification":"23"},"floatingFixVoid",{"range":"24","text":"25"},"Add void operator to ignore.","directive","",[225,445],"void import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });"]